version: "3"
services:
  vpn:
    image: ghcr.io/bubuntux/nordlynx
    network_mode: bridge
    container_name: nordvpn
    cap_add:
      - NET_ADMIN
    environment:
      - "PRIVATE_KEY=${NORDLYNX_KEY}"
      - "NET_LOCAL=${MAIN_NETWORK}"
      - "TZ=${TIMEZONE}"
      - DNS=8.8.8.8,8.8.4.4
    ports:
      - 8082:8080
    healthcheck:
      test: "curl -ILXGET https://www.google.com"
    restart: always

  rutorrent:
    image: crazymax/rtorrent-rutorrent:latest
    network_mode: service:vpn
    container_name: rutorrent
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./config/rutorrent_style.css:/var/www/rutorrent/css/style.css:ro
      - "${CONTAINERS_PATH}/rutorrent:/data"
      - "${TORRENTS_PATH}:/downloads"
    healthcheck:
      test: "curl -ILXGET https://www.google.com && curl -ILXGET http://127.0.0.1:8080"
    restart: always

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  cgp:
    image: pedbarbosa/docker-cgp
    container_name: cgp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/collectd/rrd:/var/lib/collectd/rrd:ro
    ports:
      - 8085:80
    healthcheck:
      test: "curl -ILXGET http://localhost"
    restart: always

  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./config/ddclient.conf:/config/ddclient.conf
    restart: always

  homeassistant:
    image: homeassistant/home-assistant:latest
    container_name: homeassistant
    network_mode: host
    depends_on:
      - mariadb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CONTAINERS_PATH}/homeassistant:/config"
    healthcheck:
      test: "curl -ILXGET http://localhost:8123"
    restart: always

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    runtime: nvidia
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
      - "JELLYFIN_PublishedServerUrl=${JELLYFIN_SERVER}"
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - "${CONTAINERS_PATH}/jellyfin:/config"
      - "${VIDEO_PATH}/Movies:/data/movies"
      - "${VIDEO_PATH}/TV:/data/tvshows"
    ports:
      - 8096:8096
      # port 1900 is clashing with HASS
      #- 1900:1900/udp
      - 7359:7359/udp
    healthcheck:
      test: "curl -ILXGET http://localhost:8096"
    restart: always

  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_PWD=${MYSQL_ROOT_PASSWORD}"
    volumes:
      - "${CONTAINERS_PATH}/mariadb:/config"
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      timeout: 2s
      retries: 10
    restart: always

  postfix:
    image: pedbarbosa/docker-postfix
    container_name: postfix
    ports:
      - "25:25"
      - "587:587"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/log/maillog:/var/log/maillog
      - "${CONTAINERS_PATH}/postfix:/config"
    restart: always

  projectsend:
    image: lscr.io/linuxserver/projectsend
    container_name: projectsend
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - "${CONTAINERS_PATH}/projectsend/config:/config"
      - "${CONTAINERS_PATH}/projectsend/data:/data"
    ports:
      - 8083:80
    healthcheck:
      test: "curl -ILXGET http://localhost"
    restart: always

  proxy:
    image: nginx
    container_name: proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CONTAINERS_PATH}/proxy/.htpasswd:/etc/nginx/.htpasswd:ro"
      - "${CONTAINERS_PATH}/proxy/certs:/etc/nginx/certs:ro"
      - "${CONTAINERS_PATH}/proxy/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${CONTAINERS_PATH}/proxy/index.html:/var/www/html/index.html:ro"
    ports:
      - 80:80
      - 443:443
    restart: always
    
  sickchill:
    image: linuxserver/sickchill
    container_name: sickchill
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - "${CONTAINERS_PATH}/sickchill:/config"
      - "${TORRENTS_PATH}:/torrents"
      - "${VIDEO_PATH}:/video"
    ports:
      - 8081:8081
    healthcheck:
      test: "wget http://localhost:8081 --spider -q"
      timeout: 5s
      retries: 10
    restart: always

  smokeping:
    image: linuxserver/smokeping
    container_name: smokeping
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - "${CONTAINERS_PATH}/smokeping/config:/config"
      - "${CONTAINERS_PATH}/smokeping/data:/data"
    ports:
      - 8098:80
    healthcheck:
      test: "wget http://localhost:80 --spider -q"
    restart: always

  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
      - "URL=${SWAG_DOMAIN}"
      - "SUBDOMAINS=${SWAG_SUBDOMAINS}"
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - PROPAGATION=20
      - "EMAIL=${SWAG_EMAIL}"
    volumes:
      - "${CONTAINERS_PATH}/swag:/config"
    restart: always

  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - "${CONTAINERS_PATH}/syncthing:/config"
      - "${SYNCTHING_PATH}:/targets"
    healthcheck:
      test: "curl -ILXGET http://localhost:8384"
    restart: always

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    environment:
      - "ADMIN_TOKEN=${VAULT_TOKEN}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CONTAINERS_PATH}/vaultwarden:/data"
    ports:
      - 8084:80
    healthcheck:
      test: "curl -ILXGET http://localhost"
    restart: always

