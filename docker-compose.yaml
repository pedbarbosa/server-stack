version: "3"
services:
  vpn:
    image: bubuntux/nordvpn
    network_mode: bridge
    container_name: nordvpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
    devices:
      - /dev/net/tun
    environment:
      - "USER=${NORDVPN_USER}" # Required
      - "PASS=${NORDVPN_PASS}"
      - DEBUG=on
      - TECHNOLOGY=NordLynx
      - "NETWORK=${MAIN_NETWORK}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8082:80
    healthcheck:
      test: "curl -ILXGET https://www.google.com"
    restart: always

  rutorrent:
    image: pedbarbosa/docker-rutorrent
    network_mode: service:vpn
    container_name: rutorrent
    depends_on:
      - vpn
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./rutorrent:/config
      - ./downloads:/downloads
    healthcheck:
      test: "curl -ILXGET https://www.google.com && curl -ILXGET http://127.0.0.1:80"
    restart: always

  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  cgp:
    image: pedbarbosa/docker-cgp
    container_name: cgp
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/collectd/rrd:/var/lib/collectd/rrd:ro
    ports:
      - 8085:80
    healthcheck:
      test: "curl -ILXGET http://localhost"
    restart: unless-stopped

  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./ddclient/ddclient.conf:/config/ddclient.conf
    restart: always

  googlehomekodi:
    image: omertu/googlehomekodi
    container_name: googlehomekodi
    environment:
      - "KODI_PROTOCOL=${KODI_PROTOCOL}"
      - "KODI_IP=${KODI_IP}"
      - "KODI_PORT=${KODI_PORT}"
      - "KODI_USER=${KODI_USER}"
      - "KODI_PASSWORD=${KODI_PASS}"
      - "AUTH_TOKEN=${IFTTT_TOKEN}"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8099:8099"
    restart: always

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./jellyfin:/config
      - "${VIDEO_PATH}/Movies:/data/movies"
      - "${VIDEO_PATH}/TV:/data/tvshows"
    ports:
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ./mariadb:/config
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: always

  postfix:
    image: pedbarbosa/docker-postfix
    container_name: postfix
    ports:
      - "25:25"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./postfix:/config
      - /var/log/maillog:/var/log/maillog
    healthcheck:
      test: "nc -vz 127.0.0.1 25"
    restart: always

  proxy:
    image: nginx
    container_name: proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./proxy/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./proxy/certs:/etc/nginx/certs:ro
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/index.html:/var/www/html/index.html:ro
    ports:
      - 80:80
      - 443:443
    restart: always
    
  sickchill:
    image: linuxserver/sickchill
    container_name: sickchill
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./sickchill:/config
      - ./downloads:/downloads
      - "${VIDEO_PATH}:/video"
    ports:
      - 8081:8081
    healthcheck:
      test: "wget http://localhost:8081 --spider -q"
    restart: always

  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
      - "URL=${SWAG_DOMAIN}"
      - "SUBDOMAINS=${SWAG_SUBDOMAINS}"
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - "EMAIL=${SWAG_EMAIL}"
    volumes:
      - ./swag:/config
    restart: unless-stopped

  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - "TZ=${TIMEZONE}"
    volumes:
      - ./syncthing:/config
      - "${PHOTOS_PATH}:/photos"
      - "${SYNCTHING_PATH}:/targets"
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

